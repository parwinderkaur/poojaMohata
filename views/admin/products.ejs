                <!-- begin app-main -->
                <div class="app-main" id="main">
                    <!-- begin container-fluid -->
                    <div class="container-fluid">
                        <!-- begin row -->
                        <div class="row">
                            <div class="col-lg-12">
                                <div class="card card-statistics">
                                    <div class="card-body">
                                        <div class="datatable-wrapper table-responsive">
                                            <div class="page-title mb-2 mb-sm-0">
                                                <h1 style="text-align: center;">Product List</h1>
                                            </div>
                                            <div style="text-align: end;">
                                              <button class="btn btn-success mb-3" id="addNewBtn">+ Add New</button>
                                            </div>
                                            <div class="container-fluid">
                                                <table id="ProductTable" class="table table-bordered">
                                                  <thead>
                                                    <tr>
                                                      <th>#</th>
                                                      <th>Title</th>
                                                      <th>Description</th>
                                                      <th>Price</th>
                                                      <th>Image</th>
                                                      <th>Status</th>
                                                      <th>Edit</th>
                                                    </tr>
                                                  </thead>
                                                  <tbody>
                                                    <% records.forEach((data, index) => { %>
                                                      <tr data-id="<%= data._id %>">
                                                        <td><%= index + 1 %></td>
                                                        <td class="title-cell"><%= data.title %></td>
                                                        <td class="description-cell" data-bs-toggle="tooltip" title="<%= data.description %>" data-description="<%= data.description ? data.description.replace(/"/g, '&quot;') : '' %>">
                                                            <%= data.description && data.description.length > 100 ? data.description.substring(0, 100) + '...' : data.description %>
                                                        </td>
                                                       <td class="price-cell"><%= data.price %></td>
                                                        <td class="image-cell"><img src="<%= data.image ? data.image : '/images/content/Products/Gemstone.jpg' %>" width="80"></td>
                                                        <td class="status-cell">
                                                          <% if (data.status === 1) { %>
                                                            <span class="badge badge-success-inverse">Enabled</span>
                                                          <% } else { %>
                                                            <span class="badge badge-warning-inverse">Disabled</span>
                                                          <% } %>
                                                        </td>
                                                        <td>
                                                          <button class="btn btn-sm btn-primary" data-bs-toggle="modal" data-bs-target="#editProductModal">Edit</button>
                                                          <button class="btn btn-sm btn-danger btn-delete" data-id="<%= data._id %>">Delete</button>
                                                        </td>
                                                      </tr>
                                                    <% }); %>
                                                  </tbody>
                                                </table>
                                              </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- end row -->
                    </div>
                    <!-- end container-fluid -->
                </div>
                <!-- end app-main -->
                  <div class="modal fade" id="editProductModal" tabindex="-1" aria-labelledby="editProductLabel" data-bs-backdrop="static"  data-bs-keyboard="false">
                    <div class="modal-dialog modal-dialog-centered">
                      <div class="modal-content">
                        <form id="editProductForm" enctype="multipart/form-data">
                          <div class="modal-header">
                            <h5 class="modal-title">Edit Product</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                          </div>
                          <div class="modal-body">
                            <input type="hidden" id="editProductId">
                            <div class="mb-3">
                              <label>Title</label>
                              <input type="text" id="editProductTitle"  name="title" class="form-control" required>
                            </div>
                            <div class="mb-3">
                              <label>Description</label>
                              <textarea id="editProductDescription" name="description" class="form-control" required></textarea>
                            </div>
                            <div class="mb-3">
                              <label>Price</label>
                              <input type="number" name="price" id="editProductPrice" class="form-control" required>
                            </div>
                            <div class="mb-3">
                              <label>Image</label>
                              <input type="file" name="image" class="form-control" id="editProductImage">
                              <img id="previewProductImage" src="" class="mt-2" width="100" />
                            </div>
                            <div class="mb-3">
                              <label>Status</label>
                              <select id="editProductStatus" name="status" class="form-control">
                                <option value="1">Enabled</option>
                                <option value="0">Disabled</option>
                              </select>
                            </div>
                          </div>
                          <div class="modal-footer">
                            <button type="submit" class="btn btn-success">Update</button>
                          </div>
                        </form>
                      </div>
                    </div>
                  </div>
<script>
document.addEventListener("DOMContentLoaded", () => {
  const modalEl = document.getElementById("editProductModal");
  const modal = new bootstrap.Modal(modalEl, {
    backdrop: "static",
    keyboard: false
  });

  // Populate form for editing
  document.querySelectorAll("#ProductTable .btn-primary").forEach(btn => {
    btn.addEventListener("click", function () {
      const row = this.closest("tr");
      const id = row.dataset.id;
      const title = row.querySelector(".title-cell").textContent.trim();
      const description = row.querySelector(".description-cell").getAttribute("data-description").trim();
      const price = row.querySelector(".price-cell").textContent.trim();
      const image = row.querySelector(".image-cell img").getAttribute("src");
      const statusText = row.querySelector(".status-cell").textContent.trim();

      document.querySelector(".modal-title").textContent = "Edit Product";
      document.getElementById("editProductId").value = id;
      document.getElementById("editProductTitle").value = title;
      document.getElementById("editProductDescription").value = description;
      document.getElementById("editProductPrice").value = price;
      document.getElementById("previewProductImage").src = image;
      document.getElementById("editProductStatus").value = statusText === "Enabled" ? "1" : "0";

      modal.show();
    });
  });

  // Handle Add New
  document.getElementById("addNewBtn").addEventListener("click", () => {
    document.querySelector(".modal-title").textContent = "Add Product";
    document.getElementById("editProductForm").reset();
    document.getElementById("editProductId").value = "";
    document.getElementById("previewProductImage").src = "";
    modal.show();
  });

  // Submit form
  document.getElementById("editProductForm").addEventListener("submit", async function (e) {
    e.preventDefault();

    const id = document.getElementById("editProductId").value;
    const formData = new FormData(this);
    if (id) formData.append('id', String(id));
    document.activeElement?.blur(); // Fix aria-hidden warning

    const modalEl = document.getElementById("editProductModal");
    const modal = bootstrap.Modal.getInstance(modalEl);
    modal.hide(); // Hide modal properly

    const res = await fetch("/api/shop", {
      method: "POST",
      body: formData
    });

    const json = await res.json();
    const flash = document.createElement("div");
    flash.className = `alert alert-${json.success ? "success" : "danger"} flash-msg`;
    flash.innerText = json.message;
    document.querySelector(".container-fluid").prepend(flash);

    if (json.success){
      setTimeout(() => {
        flash.remove();
        location.reload();
      }, 1500);
    }
  });
  document.querySelectorAll(".btn-delete").forEach(button => {
    button.addEventListener("click", async function () {
      const id = this.dataset.id;
      if (confirm("Are you sure you want to delete this item?")) {
        try {
          const res = await fetch("/api/shop/delete", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ id })
          });

          const result = await res.json();
          const flash = document.createElement("div");
          flash.className = `alert alert-${result.success ? "success" : "danger"} flash-msg`;
          flash.innerText = result.message;
          document.querySelector(".container-fluid").prepend(flash);
          setTimeout(() => {
            flash.remove();
            if (result.success) location.reload();
          }, 1500);
        } catch (error) {
          alert("Something went wrong.");
        }
      }
    });
  });
});
</script>                                    